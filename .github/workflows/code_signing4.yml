
name: Firma de código con DigiCert ONE (Windows)

on:
  workflow_dispatch:

jobs:
  sign:
    runs-on: windows-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Instalar herramientas DigiCert
        uses: digicert/ssm-code-signing@v1.0.0

      #- name: Crear archivo de certificado
       # run: |
        #  echo "${{ secrets.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > D:\Certificate_pkcs12.p12
        #shell: bash
        

      - name: Crear archivo de certificado desde base64
        run: |
          [System.IO.File]::WriteAllBytes("D:\Certificate_pkcs12.p12", [Convert]::FromBase64String("${{ secrets.SM_CLIENT_CERT_FILE }}"))
        shell: pwsh

        

      - name: Exportar variables
        run: |
          echo "SM_HOST=${{ secrets.SM_HOST }}" >> $GITHUB_ENV
          echo "SM_API_KEY=${{ secrets.SM_API_KEY }}" >> $GITHUB_ENV
          echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> $GITHUB_ENV
          echo "SM_CLIENT_CERT_PASSWORD=${{ secrets.SM_CLIENT_CERT_PASSWORD }}" >> $GITHUB_ENV
        shell: bash

      - name: Verificar archivo de certificado
        run: dir D:\Certificate_pkcs12.p12
        shell: cmd
        

      #- name: Importar certificado al almacén de Windows
       # run: |
        #  certutil -f -p "${{ secrets.SM_CLIENT_CERT_FILE }}" -importpfx "D:\Certificate_pkcs12.p12"
        #shell: cmd
        
 
      - name: Listar archivos en .build
        run: dir .build        

      - name: Listar archivos en .signingmanager
        run: dir "%USERPROFILE%\.signingmanager"
        shell: cmd      
        
      - name: Activar logging en TRACE
        run: set SM_LOG_LEVEL=TRACE
        shell: cmd


      - name: Mostrar contenido de pkcs11properties.cfg
        run: type "C:\Users\RUNNER~1\AppData\Local\Temp\smtools-windows-x64\pkcs11properties.cfg"
        shell: cmd
        
        
      - name: Verificar existencia de smpkcs11.dll
        run: dir "C:\Users\RUNNER~1\AppData\Local\Temp\smtools-windows-x64\smpkcs11.dll"
        shell: cmd



      - name: Mostrar contenido base64 del archivo .p12
        run: |
          [Convert]::ToBase64String([System.IO.File]::ReadAllBytes("D:\Certificate_pkcs12.p12"))
        shell: pwsh


      - name: Listar certificados disponibles
        run: smctl certificate ls
        shell: cmd



      - name: Firmar archivo con fingerprint
        run: |
          smctl healthcheck
          smctl windows certsync --keypair-alias Githubsigncert
          smctl sign --keypair-alias Githubsigncert --input winpty.exe --config-file "C:\Users\RUNNER~1\AppData\Local\Temp\smtools-windows-x64\pkcs11properties.cfg"
        shell: cmd
        
      - name: Subir archivo firmado
        uses: actions/upload-artifact@v4
        with:
          name: winpty-firmado
          path: winpty.exe
          

      - name: Copiar log de smctl
        run: copy "%USERPROFILE%\.signingmanager\logs\smctl.log" smctl.log
        shell: cmd

      - name: Subir log como artefacto
        uses: actions/upload-artifact@v4
        with:
            name: smctl-log
            path: smctl.log
            if-no-files-found: warn

